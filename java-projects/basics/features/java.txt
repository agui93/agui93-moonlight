—————————————————————————————————————————————
Generics
https://www.oracle.com/technetwork/articles/java/juneau-generics-2255374.html
https://docs.oracle.com/javase/tutorial/java/generics/index.html


reflection
https://docs.oracle.com/javase/tutorial/reflect/index.html

Input and Output;				File Handling;		Useful and/or Advanced Features
https://www.geeksforgeeks.org/java/


JAVA  (JVM JMM NIO THREAD )
————————————————————————————————————————————————————————————

java.util.ServiceLoader
https://www.oracle.com/technetwork/articles/javase/extensible-137159.html
https://www.logicbig.com/tutorials/core-java-tutorial/java-se-api/service-loader.html
https://cxis.me/2017/04/17/Java%E4%B8%ADSPI%E6%9C%BA%E5%88%B6%E6%B7%B1%E5%85%A5%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/
https://github.com/google/auto/tree/master/service
————————————————————————————————————————————————————————————
Packaging Programs in JAR Files
https://docs.oracle.com/javase/tutorial/deployment/jar/index.html
————————————————————————————————————————————————————————————
Trail: Custom Networking
https://docs.oracle.com/javase/tutorial/networking/index.html

Java反编译工具（如JD_GUI）


System.getProperties()
————————————————————————————————————————————————————————————
Java Naming and Directory Interface (J.N.D.I.) API
Jini network technology and the Service Location Protocol (SLP)
————————————————————————————————————————————————————————————
### BASE
反射 动态代理  泛型




### JDK中的数据结构


### JDK中的其他工具




### JVM
https://www.tutorialspoint.com/java_virtual_machine/java_virtual_machine_architecture.htm



### 并发:JMM  线程
### JMM    && JSR-133   && Java-Concurrency-in-Practice
https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4
JSR-133
file:///Users/agui93/Documents/developBooks/java/jls_jvm/JSR-133.pdf
Java concurrency in practice
file:///Users/agui93/Documents/developBooks/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/Java.Concurrency.in.Practice.pdf









### NIO && Reactor  && c10k


NIO By DougLea
file:///Users/agui93/Documents/developBooks/java/netty/nio.pdf


Reactor 论文
file:///Users/agui93/Documents/developBooks/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/reactor-siemens.pdf


Reactor
https://www.cnblogs.com/doit8791/p/7461479.html
http://www.blogjava.net/DLevin/archive/2015/09/02/427045.html


c10K
http://www.kegel.com/c10k.html#benchmarking

file:///Users/agui93/Documents/developBooks/java/netty/j-nio-pdf.pdf





### Java-Unsafe  —> 多线程原语   内存操作


典型论文总结
file:///Users/agui93/Desktop/%E6%96%87%E6%A1%A3/2814270.2814313.pdf


file:///Users/agui93/Desktop/%E6%96%87%E6%A1%A3/2814270.2814313.pdf



https://www.cnblogs.com/mickole/articles/3757278.html

http://www.docjar.com/docs/api/sun/misc/Unsafe.html#getUnsafe

http://www.docjar.com/html/api/sun/misc/Unsafe.java.html



http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/file/tip/src/share/classes/sun/misc/Unsafe.java





### JOL工具 && 其他分析工具

JOL工具    Java对象在内存的结构

http://openjdk.java.net/projects/code-tools/jol/

https://juejin.im/post/6844903832833490957

核心分析工具
http://openjdk.java.net/projects/code-tools/




-------------------------------------------------------------------------------------------------------------------
java.security
https://yq.aliyun.com/articles/57223?&utm_source=qq
https://www.cnblogs.com/yiwangzhibujian/p/6207212.html
https://zhuanlan.zhihu.com/p/52032614
https://www.ibm.com/developerworks/cn/java/j-lo-javasecurity/



java.security
https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-specTOC.fm.html
https://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html
https://docs.oracle.com/javase/8/docs/technotes/guides/security/PolicyFiles.html


https://docs.oracle.com/javase/tutorial/security/index.html
https://docs.oracle.com/javase/8/docs/technotes/guides/security/index.html
https://www.geeksforgeeks.org/java/


System.getSecurityManager()
https://docs.oracle.com/javase/tutorial/essential/environment/security.html
https://stackoverflow.com/questions/5192965/java-security-manager-what-does-it-check

policy
https://docs.oracle.com/javase/8/docs/technotes/guides/security/PolicyFiles.html

permissions
https://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html

AccessController.doPrivileged
https://docs.oracle.com/javase/8/docs/technotes/guides/security/doprivileged.html
https://docs.oracle.com/javase/8/docs/api/java/security/AccessController.html
https://stackoverflow.com/questions/852453/accesscontroller-doprivileged
https://stackoverflow.com/questions/2233761/when-should-accesscontroller-doprivileged-be-used
https://www.programcreek.com/java-api-examples/?class=java.security.AccessController&method=doPrivileged
https://www.programcreek.com/java-api-examples/java.security.PrivilegedExceptionAction

选项
-Djava.security.manager
-Djava.security.policy=policy-name
-------------------------------------------------------------------------------------------------------------------
clone方法
https://www.geeksforgeeks.org/clone-method-in-java-2/ Deep Copy vs Shallow Copy
* Shallow copy is method of copying an object and is followed by default in cloning. In this method the fields of an old object X are copied to the new object Y. While copying the object type field the reference is copied to Y i.e object Y will point to same location as pointed out by X. If the field value is a primitive type it copies the value of the primitive type.
* Therefore, any changes made in referenced objects in object X or Y will be reflected in other object.

Usage of clone() method – Deep Copy
* If we want to create a deep copy of object X and place it in a new object Y then new copy of any referenced objects fields are created and these references are placed in object Y. This means any changes made in referenced object fields in object X or Y will be reflected only in that object and not in the other. In below example, we create a deep copy of object.
* A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.
-------------------------------------------------------------------------------------------------------------------

Java https://www.geeksforgeeks.org/java/
-------------------------------------------------------------------------------------------------------------------
## 2019-08-05

JMX <br/>
https://docs.oracle.com/javase/tutorial/jmx/index.html <br/>
https://docs.oracle.com/javase/8/docs/technotes/guides/management/toc.html <br/>
-Dcom.sun.management.jmxremote  <br/>
-Dcom.sun.management.jmxremote.port=portNum <br/>
-Dcom.sun.management.jmxremote.authenticate=false <br/>
-Dcom.sun.management.jmxremote.ssl=false <br/>


常见的java命令选项 <br/>
http://demo.bullfrog.live/jvm/environment

常见的java gc相关 <br/>
http://www.herongyang.com/Java-GC/


-Djava.security.egd=file:/dev/./urandom <br/>
https://stackoverflow.com/questions/137212/how-to-solve-slow-java-securerandom  <br/>
https://ruleoftech.com/2016/avoiding-jvm-delays-caused-by-random-number-generation  <br/>
http://www.thezonemanager.com/2015/07/whats-so-special-about-devurandom.html  <br/>
https://bugs.openjdk.java.net/browse/JDK-6202721  <br/>



-Djava.net.preferIPv4Stack=true <br/>
https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html <br/>
https://stackoverflow.com/questions/9882357/how-to-set-java-net-preferipv4stack-true-at-runtime <br/>
https://docs.oracle.com/javase/8/docs/technotes/guides/net/ipv6_guide/ <br/>
https://github.com/netty/netty/issues/5657 <br/>



-XX:ErrorFile <br/>
https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/felog001.html <br/>
https://stackoverflow.com/questions/22618582/java-how-to-specify-jvm-argument-xxerrorfile-and-preserve-automatic-pid-in-fi


-XX:HeapDumpOnOutOfMemoryError  <br/>
 -XX:HeapDumpPath <br/>
https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/clopts001.html#CHDFDIJI



-agentlib:jdwp <br/>
https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jdb.html <br/>
https://www.ibm.com/support/knowledgecenter/en/SSYKE2_8.0.0/com.ibm.java.80.doc/user/jdb.html





-Xms256m -Xmx2048m <br/>
Java -X查看非标准项的设置 <br/>
https://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameters-when-starting-jvm


-XX:+UseG1GC  <br/>
https://stackoverflow.com/questions/2881827/how-does-the-garbage-first-garbage-collector-work <br/>
https://docs.oracle.com/javase/7/docs/technotes/guides/vm/G1.html



-XX:-OmitStackTraceInFastThrow 
https://stackoverflow.com/questions/2411487/nullpointerexception-in-java-with-no-stacktrace



 -XX:+PrintGCDetails  <br/>
-XX:+PrintGCDateStamps  <br/>
https://blog.gceasy.io/2016/02/22/understand-garbage-collection-log/#more-401


-XX:+PrintGCApplicationConcurrentTime  <br/>
-XX:+PrintGCApplicationStoppedTime  <br/>
https://stackoverflow.com/questions/29666057/analyzing-gc-logs/29673564#29673564
http://www.herongyang.com/Java-GC/
-------------------------------------------------------------------------------------------------------------------
## 2019-07-24



**java==操作符**<br/>
https://stackoverflow.com/questions/7520432/what-is-the-difference-between-and-equals-in-java
https://stackoverflow.com/questions/1586223/how-does-the-tostring-equals-object-methods-work-differently-or-similar


**Autoboxing and unboxing**<br/>
https://stackoverflow.com/questions/27647407/why-do-we-use-autoboxing-and-unboxing-in-java
https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html

Converting a primitive value (an int, for example) into an object of the corresponding wrapper class (Integer) is called autoboxing. The Java compiler applies autoboxing when a primitive value is:

* Passed as a parameter to a method that expects an object of the corresponding wrapper class.
* Assigned to a variable of the corresponding wrapper class.

Converting an object of a wrapper type (Integer) to its corresponding primitive (int) value is called unboxing. The Java compiler applies unboxing when an object of a wrapper class is:

* Passed as a parameter to a method that expects a value of the corresponding primitive type.
* Assigned to a variable of the corresponding primitive type.



| Primitive type | Wrapper class |
| -------------- | ------------- |
| boolean        | Boolean       |
| byte           | Byte          |
| char           | Character     |
| float          | Float         |
| int            | Integer       |
| long           | Long          |
| short          | Short         |
| double         | Double        |


-------------------------------------------------------------------------------------------------------------------
2019-07-15
equals 与 hashCode方法:
https://www.geeksforgeeks.org/equals-hashcode-methods-java/
https://www.geeksforgeeks.org/override-equalsobject-hashcode-method/
https://stackoverflow.com/questions/27581/what-issues-should-be-considered-when-overriding-equals-and-hashcode-in-java



equals vs  operator==
https://stackoverflow.com/questions/7520432/what-is-the-difference-between-and-equals-in-java
https://www.geeksforgeeks.org/difference-equals-method-java/


How to print address of an object?
https://stackoverflow.com/questions/18396927/how-to-print-the-address-of-an-object-if-you-have-redefined-tostring-method


-------------------------------------------------------------------------------------------------------------------




